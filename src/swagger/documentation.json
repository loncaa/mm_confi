{
  "swagger": "2.0",
  "info": {
    "description": "This is Confi API Documentation",
    "version": "1.0.0",
    "title": "Swagger Confi",
    "contact": {
      "email": "aloncar.mail@gmail.com"
    }
  },
  "tags": [
    {
      "name": "bookings",
      "description": "Operations about booking"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "attendees",
      "description": "Operations about attendees"
    },
    {
      "name": "authorization",
      "description": "Operations about authorization"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/app/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "User email which is necessary for login.",
            "required": true
          },
          {
            "in": "body",
            "name": "password",
            "description": "User password which is necessary for login.",
            "required": true
          },
          {
            "in": "body",
            "name": "isAdmin",
            "description": "User 'is admin' flag.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch an existing user",
        "description": "",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "session",
            "name": "userId",
            "description": "Logged user ID.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete an existing user",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "session",
            "name": "userId",
            "description": "Logged user ID.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/auth/login": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "user": {
                  "$ref": "#/definitions/User"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/auth/logout": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Logout failed!",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/bookings": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Fetch an existing user booking",
        "description": "",
        "operationId": "getBookings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "session",
            "name": "userId",
            "description": "Logged user ID.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Failed to list bookings",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "list": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Booking"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Add a new booking ",
        "description": "",
        "operationId": "addBooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "title",
            "description": "Booking title.",
            "required": true
          },
          {
            "in": "body",
            "name": "time",
            "description": "Booking time.",
            "required": true
          },
          {
            "in": "session",
            "name": "userId",
            "description": "Id of existing and currently logged User.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "booking": {
                  "$ref": "#/definitions/Booking"
                }
              }
            }
          },
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/bookings/{bookingId}": {
      "delete": {
        "tags": [
          "bookings"
        ],
        "summary": "Delete an existing booking",
        "description": "",
        "operationId": "deleteBooking",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "session",
            "name": "userId",
            "description": "Logged user ID.",
            "required": true
          },
          {
            "in": "params",
            "name": "bookingId",
            "description": "Selected booking ID.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Failed to delete bookings",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "user": {
                  "$ref": "#/definitions/Booking"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/attendees/booking/{bookingId}": {
      "post": {
        "tags": [
          "attendees"
        ],
        "summary": "Add a new attendee to booking",
        "description": "",
        "operationId": "addAttendee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "firstname",
            "description": "Attendee first name",
            "required": true
          },
          {
            "in": "body",
            "name": "lastname",
            "description": "Attendee last name.",
            "required": true
          },
          {
            "in": "body",
            "name": "email",
            "description": "Attendee email.",
            "required": true
          },
          {
            "in": "body",
            "name": "phone",
            "description": "Attendee phone number",
            "required": true
          },
          {
            "in": "params",
            "name": "bookingId",
            "description": "ID of booking in which is attendee added.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "attendee": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "attendees"
        ],
        "summary": "Fetch list of booking attendees ",
        "description": "",
        "operationId": "getAttendees",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "params",
            "name": "bookingId",
            "description": "Id of attendees booking.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties" : {
                "ok": {
                  "type": "boolean"
                },
                "list": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Attendee"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    },
    "/app/attendees/{id}": {
      "delete": {
        "tags": [
          "attendees"
        ],
        "summary": "Delete an existing attendee",
        "description": "",
        "operationId": "deleteAttendee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "params",
            "name": "id",
            "description": "Id of selected attendee.",
            "required": true
          }
        ],
        "responses": {
          "300": {
            "description": "Required params not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Attendee deleted",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "attendee": {
                  "$ref": "#/definitions/Attendee"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "Booking": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Attendee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}